<?php

namespace NIPA\ProjetBundle\Repository;

/**
 * ProjetValidationPhaseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetValidationPhaseRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function getValidationProjetEnCadrage($projet)
    {
        $query = $this->_em->createQuery('SELECT a FROM NIPAProjetBundle:ProjetValidationPhase a JOIN a.refPhase r JOIN r.refEtape e WHERE a.projet = :projet AND e.nom = :etape');
        $query->setParameter('projet', $projet);
        $query->setParameter('etape', "En Cadrage");

        // Utilisation de getSingleResult car la requête ne doit retourner qu'un seul résultat
        return $query->getResult();
    }    
    
    public function getValidationProjetEnConception($projet)
    {
        $query = $this->_em->createQuery('SELECT a FROM NIPAProjetBundle:ProjetValidationPhase a JOIN a.refPhase r JOIN r.refEtape e WHERE a.projet = :projet AND e.nom = :etape');
        $query->setParameter('projet', $projet);
        $query->setParameter('etape', "En Conception");

        // Utilisation de getSingleResult car la requête ne doit retourner qu'un seul résultat
        return $query->getResult();
    }  
    
        public function getValidationProjetEnRealisation($projet)
    {
        $query = $this->_em->createQuery('SELECT a FROM NIPAProjetBundle:ProjetValidationPhase a JOIN a.refPhase r JOIN r.refEtape e WHERE a.projet = :projet AND e.nom = :etape');
        $query->setParameter('projet', $projet);
        $query->setParameter('etape', "En Réalisation");

        // Utilisation de getSingleResult car la requête ne doit retourner qu'un seul résultat
        return $query->getResult();
    }      
    
    
}
